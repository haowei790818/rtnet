#!/bin/sh
#
# script for loading/unloading RTnet, RTmac/TMDA, and RTcap
#

usage() {
    cat << EOF
Usage:
    $0 [-cf <config-file>] {start|stop}
        Start or stop station according to configuration file

    $0 [-cf <config-file>] master <client_ip1> [<client_ip2> ...]
        Start station as master for given list of clients

    $0 [-cf <config-file>] capture
        Start only passive realtime capturing
EOF
}

init_rtnet() {
    insmod $RTNET_MOD/rtnet$MODULE_EXT >/dev/null || exit 1
    insmod $RTNET_MOD/$RT_DRIVER$MODULE_EXT $RT_DRIVER_OPTIONS >/dev/null || exit 1

    if [ $RT_LOOPBACK = "yes" ]; then
        insmod $RTNET_MOD/rt_loopback$MODULE_EXT >/dev/null || exit 1
    fi

    if [ $RTCAP = "yes" ]; then
        insmod $RTNET_MOD/rtcap$MODULE_EXT >/dev/null || exit 1
    fi

    $RTIFCONFIG rteth0 up $IPADDR $NETMASK_OPT

    if [ $RT_LOOPBACK = "yes" ]; then
        $RTIFCONFIG rtlo up 127.0.0.1
    fi

    if [ $RTCAP = "yes" ]; then
        ifconfig rteth0 up
        ifconfig rteth0-mac up
        if [ $RT_LOOPBACK = "yes" ]; then
            ifconfig rtlo up
        fi
    fi

    insmod $RTNET_MOD/rtcfg$MODULE_EXT >/dev/null
    insmod $RTNET_MOD/rtmac$MODULE_EXT >/dev/null
    insmod $RTNET_MOD/tdma-v1$MODULE_EXT start_timer=0 >/dev/null
}

start_master() {
    $RTCFG rteth0 server

    STAGE_2_OPT=
    if [ ! "$STAGE_2_SRC" = "" ]; then
        STAGE_2_OPT="-stage2 $STAGE_2_SRC"
    fi
    for CLIENT in $TDMA_SLAVES; do
        $RTCFG rteth0 add $CLIENT $STAGE_2_OPT
    done

    echo -n "Waiting for all clients..."
    $RTCFG rteth0 wait

    echo
    echo -n "Starting TDMA master..."
    $RTIFCONFIG rteth0 mac master $TDMA_CYCLE
    sleep 1

    OFFSET=$TDMA_OFFSET
    DELAY=0
    for CLIENT in $TDMA_SLAVES; do
        $RTIFCONFIG rteth0 mac add $CLIENT $OFFSET
        let OFFSET=$OFFSET+$TDMA_OFFSET
        let DELAY=$DELAY+5
        sleep 3
    done

    $RTIFCONFIG rteth0 mac up
    sleep $DELAY
    ifconfig vnic0 up $IPADDR $NETMASK_OPT

    echo
    $RTCFG rteth0 ready
}


prefix="@prefix@"
RTNETCFG="@sysconfdir@/rtnet.conf"

if [ "$1" = "-cf" ]; then
    RTNETCFG="$2"
    shift 2
fi

if [ -r $RTNETCFG ]; then
    . $RTNETCFG
else
    echo "Could not read $RTNETCFG"
    exit 1
fi

NETMASK_OPT=
if [ ! "$NETMASK" = "" ]; then
    NETMASK_OPT="netmask $NETMASK"
fi


case "$1" in
    start)
        init_rtnet

        if [ $TDMA_MODE = "master" ]; then
            start_master
        else
            echo -n "Stage 1: searching for master..."
            $RTCFG rteth0 client

            echo
            echo -n "Stage 2: waiting for other clients..."
            if [ ! "$STAGE_2_DST" = "" ]; then
                $RTCFG rteth0 announce -f $STAGE_2_DST
                echo
                /bin/sh -c "$STAGE_2_CMDS"
            else
                $RTCFG rteth0 announce
                echo
            fi

            $RTIFCONFIG rteth0 mac client
            ifconfig vnic0 up $IPADDR $NETMASK_OPT

            echo -n "Stage 3: waiting for common setup completion..."
            $RTCFG rteth0 ready
            echo
        fi
        ;;

    stop)
        ifconfig vnic0 down 2>/dev/null
        ifconfig rteth0 down 2>/dev/null
        ifconfig rteth0-mac down 2>/dev/null
        ifconfig rtlo down 2>/dev/null

        $RTIFCONFIG rteth0 mac down

        rmmod tdma-v1 rtmac rtcfg 2>/dev/null

        $RTIFCONFIG rteth0 down
        $RTIFCONFIG rtlo down 2>/dev/null

        rmmod rtcap rt_loopback $RT_DRIVER rtnet 2>/dev/null
        ;;

    master)
        shift
        init_rtnet
        TDMA_SLAVES=$*
        start_master
        ;;

    capture)
        insmod $RTNET_MOD/rtnet$MODULE_EXT >/dev/null || exit 1
        insmod $RTNET_MOD/$RT_DRIVER$MODULE_EXT $RT_DRIVER_OPTIONS >/dev/null || exit 1
        insmod $RTNET_MOD/rtcap$MODULE_EXT start_timer=1 >/dev/null || exit 1
        $RTIFCONFIG rteth0 up $IPADDR promisc
        ifconfig rteth0 up
        ifconfig rteth0-mac up
        ;;

    *)
        usage
        exit 1
esac

exit 0
