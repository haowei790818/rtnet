                             RTnet Version 0.2.10

What is it?
-----------
RTnet is real-time UDP/IP protocol stack for RTAI (hard real-time Linux 
extension). It offers a standard socket API to be used with RTAI kernel 
modules and LXRT processes, see header files for details.

What are the requirements?
--------------------------
- Linux kernel 2.4.x
- RTAI 24.1.9 or better
- x86 platform (at least for LXRT extensions, kernel API _should_ work on
  other platforms, too)
- RealTek 8139, Intel EtherExpress Pro 100 or 3Com EtherLink III network
  adapter

How to install it?
------------------
1. Install and test a suitable RTAI version (see also www.rtai.org)
2. cd <RTAI-DIR> (e.g. /usr/src/rtai-24.1.9)
3. rm -r rtnet
4. rm include/rtnet.h
5. tar xvzf <PATH-TO-RTNET-ARCHIVE>/rtnet-X.X.X.tar.gz
6. Enable "Real-Time networking (rtnet)" in your RTAI configuration
   (only available if "Prompt for experimental code" is enabled)
7. make && make install
8. run "mknod /dev/rtnet c 10 240" on your target system
9. run "mknod /dev/rtmac c 10 241" if you want to use rtmac

How to test it?
---------------
1. Shutdown the network device which shall become part of the RT-network and
   remove its driver module (this also means that it must not be compiled
   into the kernel!)
2. Load required RTAI modules
3. Load RTnet and NIC RT-driver module
4. Setup RT-ethernet device and solicit required MAC adresses(rtifconfig)
5. Load application module

For more details see run-scripts in <RTAI-DIR>/rtnet/examples/round_trip_time 

There is also a simple script for loading and unloading RTnet and RTmac. See
<RTAI-DIR>/rtnet/tools/rtnet. To use it copy rtnet.conf from that directory
to /etc/rtnet.conf and modify it for your system.

How to use RTmac? (a very very short guide!)
-----------------
I assume that rtnet module has been loaded and configured(rtifconfig).
1. Load rtmac:
	# modprobe rtmac dev=rteth0
   Assumed that your realtime device is rteth0.
2. On client stations:
	# rtifconfig rteth0 mac client
3. On the server station:
	# rtifconfig rteth0 mac master <cycle-time/us> [<mtu-size/byte>]
	# rtifconfig rteth0 mac add <ip_client1>
	# rtifconfig rteth0 mac add <ip_client2>
	# ...
	# rtifconfig rteth0 mac up
	# rtifconfig rteth0 mac offset <ip_client1> <offset/us>
	# rtifconfig rteth0 mac offset <ip_client2> <offset/us>
	# ...
4. Now you can run examples in <RTAI-DIR>/rtnet/rtmac/examples

See README.rtmac for more information.

NOTE FOR RTMAC: ONLY one-shot timer mode is supported by the current RTmac.
You should completely unload rtmac and rtnet modules after your application
ended. NEVER run the application twice without unloading the modules.


RTnet is free software, and you are welcome to redistribute it under 
the terms of the GNU General Public License. This program comes with 
ABSOLUTELY NO WARRANTY. See "LICENSE" for details.

Contributors:
Ulrich Marx
<marx-at-fet.uni-hannover.de>   	- core programming
Nathan Gustavson			- testing and bug fixing
Marc Kleine-Budde			- RTmac, testing, bug fixing
Jan Kiszka <jan.kiszka-at-web.de>	- eepro100-rt and this poor doc
Wittawat Yamwong <wittawat-at-web.de>	- testing, documents
Hans-Peter Bock <hpbock-at-web.de>	- testing, bug fixing
Mathias Koehrer
<mathias_koehrer-at-yahoo.de>		- 3c59x-rt, rtnetproxy, testing,
                                          bug fixing, ip fragmentation
Vinay Sridhara
<vinaysridhara-at-yahoo.com>            - ICMP support
Erwin Rol <erwin-at-muffin.org>         - Ethereal plugin, rtnetproxy

Acknowledgements:
David Schleef			        - he wrote the original RTnet, some
                                          parts of this version are based on
                                          his code
