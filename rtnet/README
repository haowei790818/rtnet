                             RTnet Version 0.5.6

What is it?
-----------
RTnet is real-time UDP/IP protocol stack for RTAI (hard real-time Linux
extension). It provides a standard socket API to be used with RTAI kernel
modules and LXRT processes, see rtnet.h header file for details.

What are the requirements?
--------------------------
- Linux kernel 2.4.x
- RTAI 24.1.9 or better, NEWLXRT when using user space API
- x86 platform (at least for LXRT extensions, kernel API _should_ work on
  other platforms, too)
- RealTek 8139, Intel 8255x (EtherExpress Pro 100), DEC 21x4x-based (tulip),
  AMD PCnet32/PCnetPCI, VIA Rhine network adapter, MPC8260 FCC, or MPC8xx
  SCC/FEC on-chip controllers

How to install it?
------------------
1. Install and test a suitable RTAI version (see www.rtai.org, 24.1.10 is not
   working with this release while 24.1.11 is fine again)
2. cd to a preferred directory (e.g. /usr/src)
3. tar xvzf <PATH-TO-RTNET-ARCHIVE>/rtnet-X.X.X.tar.gz
4. cd rtnet
5. Run ./configure --with-rtai=<PATH-TO-RTAI> <options>
   Valid options are a combination of the following values:
       --enable-8139            compiles the RealTek driver
       --enable-eepro100        compiles the EtherExpress driver
       --enable-loopback        compiles the loopback driver
       --enable-pcnet32         compiles the PCnet32 driver
       --enable-tulip           compiles the DEC driver
       --enable-via-rhine       compiles the VIA Rhine driver
       --enable-fcc-enet        compiles the MPC8260 FCC driver
       --enable-scc-enet        compiles the MPC8xx SCC driver
       --enable-fec-enet        compiles the MPC8xx FEC driver
6. make
7. Copy the desired modules (rtnet.o, rtmac.o, drivers, examples, etc.) to your
   target system
8. run "mknod /dev/rtnet c 10 240" on your target system
9. run "mknod /dev/rtmac c 10 241" if you want to use rtmac

How to test it?
---------------
1. Shutdown the network device which shall become part of the RT-network and
   remove its driver module (this also means that it must not be compiled
   into the kernel!)
2. Load required RTAI modules
3. Load RTnet and NIC RT-driver module
4. Setup RT-ethernet device and solicit required MAC adresses(rtifconfig)
5. Load application module

For more details see run-scripts in <RTAI-DIR>/rtnet/examples/round_trip_time

There is also a simple script for loading and unloading RTnet and RTmac. See
<RTAI-DIR>/rtnet/tools/rtnet. To use it copy rtnet.conf from that directory
to /etc/rtnet.conf and modify it for your system.

How to use RTmac? (a very very short guide!)
-----------------
I assume that rtnet module has been loaded and configured(rtifconfig).
1. Load rtmac:
    # modprobe rtmac dev=rteth0
   Assumed that your realtime device is rteth0.
2. On client stations:
    # rtifconfig rteth0 mac client
3. On the server station:
    # rtifconfig rteth0 mac master <cycle-time/us> [<mtu-size/byte>]
    # rtifconfig rteth0 mac add <ip_client1>
    # rtifconfig rteth0 mac add <ip_client2>
    # ...
    # rtifconfig rteth0 mac up
    # rtifconfig rteth0 mac offset <ip_client1> <offset/us>
    # rtifconfig rteth0 mac offset <ip_client2> <offset/us>
    # ...
4. Now you can run examples in <RTAI-DIR>/rtnet/rtmac/examples
5. You can furthermore use the associated VNIC (here "vnic0") now.

See Documentation/README.rtmac for more information.

NOTE FOR RTMAC: ONLY one-shot timer mode is supported by the current RTmac.


RTnet is free software, and you are welcome to redistribute it under
the terms of the GNU General Public License. This program comes with
ABSOLUTELY NO WARRANTY. See "LICENSE" for details.

Contributors:
Ulrich Marx
<marx-at-fet.uni-hannover.de>           - core programming
Nathan Gustavson                        - testing and bug fixing
Marc Kleine-Budde                       - RTmac, testing, bug fixing
Jan Kiszka <jan.kiszka-at-web.de>       - project management, core programming
Wittawat Yamwong <wittawat-at-web.de>   - testing, documents
Hans-Peter Bock <hpbock-at-web.de>      - testing, bug fixing
Mathias Koehrer
<mathias_koehrer-at-yahoo.de>           - 3c59x-rt, rtnetproxy, testing,
                                          bug fixing, ip fragmentation
Vinay Sridhara
<vinaysridhara-at-yahoo.com>            - ICMP support
Erwin Rol <erwin-at-muffin.org>         - Ethereal plugin, rtnetproxy
Wolfgang Grandegger
<wg-at-denx.de>                         - MPC drivers

Acknowledgements:
David Schleef                           - he wrote the original RTnet, some
                                          parts of this version are based on
                                          his code
